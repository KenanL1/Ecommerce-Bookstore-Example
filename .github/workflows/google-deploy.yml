name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main

jobs:
  build:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      #
      #      - name: Install Maven
      #        run: apt-get update && apt-get install -y maven

      # Skip test database isn't set up yet
      - name: Build JAR
        run: mvn clean package -DskipTests
      #
      #      - name: Determine JAR file location
      #        id: find-jar
      #        run: echo "::set-output name=jar-path::$(find $HOME/.m2 -name 'bookstore*.jar' | head -n 1)"


      #      - name: Upload JAR as artifact
      #        uses: actions/upload-artifact@v2
      #        with:
      #          name: bookstore-jar
      #          path: /target/*.jar

      #  docker:
      #    runs-on: ubuntu-latest
      #
      #    needs: build
      #
      #    steps:
      #      - name: Checkout code
      #        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker bookstore image
        run: docker build -t kenanl1/bookstore:latest .

      #      - name: Build Docker Compose
      #        run: docker-compose build

      - name: Push Docker image
        run: docker push kenanl1/bookstore:latest

        #  deploy:
        #    runs-on: ubuntu-latest
        #
        #    needs: docker

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      #      - name: Deploy to Cloud Run
      #        id: deploy
      #        uses: google-github-actions/deploy-cloudrun@v0
      #        with:
      #          service: ${{ secrets.SERVICE }}
      #          image: kenanl1/bookstore:latest

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

