server.port=8080
#spring.datasource.url=jdbc:postgresql://localhost:5432/${POSTGRES_DATABASE}
#spring.datasource.url=jdbc:postgresql://34.122.76.40/${POSTGRES_DATABASE}
spring.datasource.url=jdbc:postgresql:///postgres?cloudSqlInstance=bookstore-390801:us-central1:bookstore-db&socketFactory=com.google.cloud.sql.postgres.SocketFactory&user=postgres&password=postgres
# Retrieve instance connection name from the previous step
# Cloud SQL starter automatically configures the JDBC URL
spring.cloud.gcp.sql.instance-connection-name=bookstore-390801:us-central1:bookstore-db
spring.cloud.gcp.sql.database-name=postgres
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.session.store-type=jdbc
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true 
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.application.security.jwt.secret-key=${JWT_SECRET_KEY}
spring.application.security.jwt.expiration=86400000
